/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CustomerManager;

import Connection.DataConnect;
import Validate.CheckForm;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Mr_Duc
 */
public class CustomerMng extends javax.swing.JPanel {

    CustomerTableModel customerTableModel = new CustomerTableModel();
    CustomerManager customerManager = new CustomerManager();
    Connection con = null;
    protected PreparedStatement ps;

    /**
     * Creates new form CustomerManager
     */
    public CustomerMng() {
        initComponents();
        con = DataConnect.connectData();
        //JPanel.Listeners.addDocumentListenerToTextField(txtSearch, JTable_CustomerList, customerTableModel);
        loadCustomerTable();
    }

    private void loadCustomerTable() {
        customerTableModel.addListToTheTable(customerManager.loadCustomers());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPanel_CustomerList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTable_CustomerList = new javax.swing.JTable();
        JPanel_InforCus = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaAddress = new javax.swing.JTextArea();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        JPanel_CustomerList.setBorder(javax.swing.BorderFactory.createTitledBorder("Customer List"));

        JTable_CustomerList.setModel(customerTableModel);
        JTable_CustomerList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTable_CustomerListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTable_CustomerList);

        javax.swing.GroupLayout JPanel_CustomerListLayout = new javax.swing.GroupLayout(JPanel_CustomerList);
        JPanel_CustomerList.setLayout(JPanel_CustomerListLayout);
        JPanel_CustomerListLayout.setHorizontalGroup(
            JPanel_CustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        JPanel_CustomerListLayout.setVerticalGroup(
            JPanel_CustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
        );

        JPanel_InforCus.setBorder(javax.swing.BorderFactory.createTitledBorder("Customer Information"));

        jLabel1.setText("Code :");

        jLabel2.setText("Name :");

        jLabel4.setText("Phone :");

        txtCode.setEditable(false);

        jLabel5.setText("Address :");

        txaAddress.setColumns(20);
        txaAddress.setRows(5);
        jScrollPane2.setViewportView(txaAddress);

        javax.swing.GroupLayout JPanel_InforCusLayout = new javax.swing.GroupLayout(JPanel_InforCus);
        JPanel_InforCus.setLayout(JPanel_InforCusLayout);
        JPanel_InforCusLayout.setHorizontalGroup(
            JPanel_InforCusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanel_InforCusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPanel_InforCusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(JPanel_InforCusLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPanel_InforCusLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(JPanel_InforCusLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtPhone)))
                .addGap(119, 119, 119)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(260, Short.MAX_VALUE))
        );

        JPanel_InforCusLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel1, jLabel2, jLabel4});

        JPanel_InforCusLayout.setVerticalGroup(
            JPanel_InforCusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPanel_InforCusLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPanel_InforCusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JPanel_InforCusLayout.createSequentialGroup()
                        .addGroup(JPanel_InforCusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(JPanel_InforCusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(JPanel_InforCusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add.png"))); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Update.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Remove.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/reset.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JPanel_CustomerList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(JPanel_InforCus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(btnAdd)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnDelete)
                .addGap(18, 18, 18)
                .addComponent(btnReset)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnDelete, btnReset, btnUpdate});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JPanel_CustomerList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JPanel_InforCus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnReset))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    public boolean checkCustomerName() {
        String name = txtName.getText().trim();
        boolean test = false;
        try {
            String query = "select CUSTOMER_NAME from CUSTOMER";
            ps = con.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                if (name.equals(rs.getString("CUSTOMER_NAME"))) {
                    txtName.setText("");
                    txtName.requestFocus();
                    test = true;
                }
            }
            if (test == true) {
                JOptionPane.showMessageDialog(this, "Customer Name existed !", "Add new Customer", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException ex) {
        }
        return test;
    }
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String name = txtName.getText().trim();
        String tel = txtPhone.getText().trim();
        String addr = txaAddress.getText().trim();
        if (name.isEmpty() || name == "") {
            JOptionPane.showMessageDialog(this, "Username is not empty!", "Warning!", 2);
            txtName.requestFocus();
            return;
        }
        if (!CheckForm.checkName(name)) {
            JOptionPane.showMessageDialog(this, "Invalid Customer Name, only be entered from a-z and 6-20 characters.", "Warning!", 2);
            txtName.requestFocus();
            return;
        }
        if (tel.isEmpty() || tel == "") {
            JOptionPane.showMessageDialog(this, "NumberPhone is not empty!", "Warning!", 2);
            txtPhone.requestFocus();
            return;
        }
        if (!CheckForm.checkPhone(tel)) {
            JOptionPane.showMessageDialog(this, "Invalid phone number, only be entered from 0-9 and 10-11 characters.", "Warning!", 2);
            txtPhone.requestFocus();
            return;
        }
        if (addr.isEmpty() || addr == "") {
            JOptionPane.showMessageDialog(this, "Address is not empty!", "Warning!", 2);
            txaAddress.requestFocus();
            return;
        }
        if (!CheckForm.checkAddress(addr)) {
            JOptionPane.showMessageDialog(this, "Invalid address, only be entered from a-z, 0-9 and 6-20 characters.", "Warning!", 2);
            txaAddress.requestFocus();
            return;
        }
        //tra ve true neu co ten bi trung
        if (checkCustomerName()) {
            return;
        } else {
            Customer c = new Customer(1, name, tel, addr);
            customerManager.addCustomer(c);
            JOptionPane.showMessageDialog(this, "Customer Added");
            loadCustomerTable();
        }


    }//GEN-LAST:event_btnAddActionPerformed

    private void JTable_CustomerListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTable_CustomerListMouseClicked
        txtCode.setText(getValueOfProductAt(getSelectedRowIndexOfProduct(), 0));
        txtName.setText(getValueOfProductAt(getSelectedRowIndexOfProduct(), 1));
        txtPhone.setText(getValueOfProductAt(getSelectedRowIndexOfProduct(), 2));
        txaAddress.setText(getValueOfProductAt(getSelectedRowIndexOfProduct(), 3));
    }//GEN-LAST:event_JTable_CustomerListMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        
        String name = txtName.getText();
        String tel = txtPhone.getText();
        String addr = txaAddress.getText();
        if (name.isEmpty() || name == "") {
            JOptionPane.showMessageDialog(this, "Please choose Customer!", "Warning!", 2);
            txtName.requestFocus();
            return;
        }
        if (name.isEmpty() || name == "") {
            JOptionPane.showMessageDialog(this, "Customer Name is not empty!", "Warning!", 2);
            txtName.requestFocus();
            return;
        }
        if (!CheckForm.checkName(name)) {
            JOptionPane.showMessageDialog(this, "Invalid Customer Name, only be entered from a-z,A-z and 6-20 characters.", "Warning!", 2);
            txtName.requestFocus();
            return;
        }
        if (tel.isEmpty() || tel == "") {
            JOptionPane.showMessageDialog(this, "NumberPhone is not empty!", "Warning!", 2);
            txtPhone.requestFocus();
            return;
        }
        if (!CheckForm.checkPhone(tel)) {
            JOptionPane.showMessageDialog(this, "Invalid phone number, only be entered from 0-9 and 10-11 characters.", "Warning!", 2);
            txtPhone.requestFocus();
            return;
        }
        if (addr.isEmpty() || addr == "") {
            JOptionPane.showMessageDialog(this, "Address is not empty!", "Warning!", 2);
            txaAddress.requestFocus();
            return;
        }
        if (!CheckForm.checkAddress(addr)) {
            JOptionPane.showMessageDialog(this, "Invalid address, only be entered from a-z, 0-9 and 6-20 characters.", "Warning!", 2);
            txaAddress.requestFocus();
            return;
        }
        if (checkCustomerName()) {
            return;
        } else {
            int code = Integer.parseInt(txtCode.getText());
            Customer c = new Customer(code, name, tel, addr);
            customerManager.updateCustomer(c);
            loadCustomerTable();
            Reset();
            JOptionPane.showMessageDialog(this, "Customer Updated Successfully");
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        String name = txtName.getText();
        if (name.isEmpty() || name == "") {
            JOptionPane.showMessageDialog(this, "Please choose Customer!", "Warning!", 2);
            txtName.requestFocus();
            return;
        }
        int show = JOptionPane.showConfirmDialog(this, "Are you sure delete Customer ?", "Remove Customer", JOptionPane.YES_NO_OPTION);
        if (show == JOptionPane.YES_OPTION) {
            for (Object o : SelectedCellValuesByColumn(0)) {
                customerManager.DeleteCustomer(Integer.parseInt(o.toString()));
            }
            loadCustomerTable();
            Reset();
            JOptionPane.showMessageDialog(this, "Done");
        } else {
            JOptionPane.showMessageDialog(this, "Delete Customer Cancel", "Remove Customer", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        Reset();
    }//GEN-LAST:event_btnResetActionPerformed
    public void Reset() {
        txtName.setText("");
        txtPhone.setText("");
        txaAddress.setText("");
    }

    private Object[] SelectedCellValuesByColumn(int column) {
        int[] selectedRows = JTable_CustomerList.getSelectedRows();
        Object[] selectedValues = new Object[selectedRows.length];
        int para = 0;
        for (int i : selectedRows) {
            selectedValues[para++] = JTable_CustomerList.getModel().getValueAt(i, column);
        }
        return selectedValues;
    }

    private int getSelectedRowIndexOfProduct() {
        return JTable_CustomerList.getSelectedRow();
    }

    private String getValueOfProductAt(int row, int column) {
        return customerTableModel.getValueAt(row, column).toString();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel JPanel_CustomerList;
    private javax.swing.JPanel JPanel_InforCus;
    private javax.swing.JTable JTable_CustomerList;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea txaAddress;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables

}
